{
  "examName": "mysql_having_clause",
  "questions": [
    {
      "question": "What is the purpose of the HAVING clause in SQL?",
      "options": [
        "To filter rows before grouping",
        "To filter groups after grouping",
        "To sort results",
        "To create aliases"
      ],
      "answer": "To filter groups after grouping",
      "number": 1
    },
    {
      "question": "Which clause is used to filter records after GROUP BY?",
      "options": [
        "WHERE",
        "HAVING",
        "ORDER BY",
        "SELECT"
      ],
      "answer": "HAVING",
      "number": 2
    },
    {
      "question": "Can you use HAVING without GROUP BY?",
      "options": [
        "Yes",
        "No",
        "Only in joins",
        "Only with subqueries"
      ],
      "answer": "Yes",
      "number": 3
    },
    {
      "question": "Which clause is used to filter rows before grouping?",
      "options": [
        "HAVING",
        "WHERE",
        "GROUP BY",
        "FILTER"
      ],
      "answer": "WHERE",
      "number": 4
    },
    {
      "question": "Which is correct order of clauses in a SQL query?",
      "options": [
        "SELECT, WHERE, GROUP BY, HAVING",
        "SELECT, GROUP BY, HAVING, WHERE",
        "WHERE, SELECT, GROUP BY, HAVING",
        "GROUP BY, HAVING, SELECT, WHERE"
      ],
      "answer": "SELECT, WHERE, GROUP BY, HAVING",
      "number": 5
    },
    {
      "question": "HAVING works with which kind of functions?",
      "options": [
        "Mathematical",
        "Aggregate",
        "Text",
        "Conversion"
      ],
      "answer": "Aggregate",
      "number": 6
    },
    {
      "question": "What does HAVING COUNT(*) > 1 do?",
      "options": [
        "Filters rows with more than one duplicate",
        "Filters groups with more than one row",
        "Deletes rows with duplicates",
        "Sorts the result"
      ],
      "answer": "Filters groups with more than one row",
      "number": 7
    },
    {
      "question": "Which clause must come before HAVING?",
      "options": [
        "ORDER BY",
        "GROUP BY",
        "SELECT",
        "WHERE"
      ],
      "answer": "GROUP BY",
      "number": 8
    },
    {
      "question": "What will SELECT dept, COUNT(*) FROM emp GROUP BY dept HAVING COUNT(*) > 2 do?",
      "options": [
        "Shows departments with more than 2 employees",
        "Shows departments with less than 2 employees",
        "Shows all departments",
        "Error"
      ],
      "answer": "Shows departments with more than 2 employees",
      "number": 9
    },
    {
      "question": "What happens if you use HAVING without GROUP BY?",
      "options": [
        "It works if there's aggregation",
        "It causes error",
        "It sorts the result",
        "It does nothing"
      ],
      "answer": "It works if there's aggregation",
      "number": 10
    },
    {
      "question": "Find departments with more than 5 employees.",
      "options": [
        "SELECT dept, COUNT(*) FROM emp GROUP BY dept HAVING COUNT(*) > 5;",
        "SELECT dept FROM emp HAVING COUNT(*) > 5;",
        "SELECT dept GROUP BY COUNT(*) > 5 FROM emp;",
        "SELECT dept COUNT(*) > 5 FROM emp;"
      ],
      "answer": "SELECT dept, COUNT(*) FROM emp GROUP BY dept HAVING COUNT(*) > 5;",
      "number": 11
    },
    {
      "question": "Show products with total sales over 1000.",
      "options": [
        "SELECT product_id, SUM(sales) FROM orders GROUP BY product_id HAVING SUM(sales) > 1000;",
        "SELECT product_id FROM orders WHERE SUM(sales) > 1000;",
        "SELECT SUM(sales) GROUP BY product_id HAVING > 1000;",
        "HAVING SUM(sales) > 1000 GROUP BY product_id;"
      ],
      "answer": "SELECT product_id, SUM(sales) FROM orders GROUP BY product_id HAVING SUM(sales) > 1000;",
      "number": 12
    },
    {
      "question": "List customers with more than 3 orders.",
      "options": [
        "SELECT customer_id, COUNT(*) FROM orders GROUP BY customer_id HAVING COUNT(*) > 3;",
        "SELECT COUNT(*) FROM orders GROUP BY customer_id WHERE COUNT(*) > 3;",
        "SELECT customer_id WHERE COUNT(*) > 3;",
        "SELECT COUNT(*) HAVING > 3;"
      ],
      "answer": "SELECT customer_id, COUNT(*) FROM orders GROUP BY customer_id HAVING COUNT(*) > 3;",
      "number": 13
    },
    {
      "question": "Get items where max price > 500.",
      "options": [
        "SELECT item, MAX(price) FROM products GROUP BY item HAVING MAX(price) > 500;",
        "SELECT item MAX(price) > 500 FROM products;",
        "SELECT item FROM products WHERE MAX(price) > 500;",
        "SELECT item, price FROM products GROUP BY item;"
      ],
      "answer": "SELECT item, MAX(price) FROM products GROUP BY item HAVING MAX(price) > 500;",
      "number": 14
    },
    {
      "question": "Find courses with average rating below 3.",
      "options": [
        "SELECT course, AVG(rating) FROM reviews GROUP BY course HAVING AVG(rating) < 3;",
        "SELECT course HAVING AVG(rating) < 3;",
        "SELECT AVG(rating) FROM reviews WHERE course < 3;",
        "HAVING AVG(rating) < 3 GROUP BY course;"
      ],
      "answer": "SELECT course, AVG(rating) FROM reviews GROUP BY course HAVING AVG(rating) < 3;",
      "number": 15
    },
    {
      "question": "Show regions where total profit is under 10000.",
      "options": [
        "SELECT region, SUM(profit) FROM sales GROUP BY region HAVING SUM(profit) < 10000;",
        "SELECT SUM(profit) FROM sales HAVING < 10000;",
        "SELECT region FROM sales GROUP BY profit HAVING < 10000;",
        "HAVING region < 10000 FROM sales;"
      ],
      "answer": "SELECT region, SUM(profit) FROM sales GROUP BY region HAVING SUM(profit) < 10000;",
      "number": 16
    },
    {
      "question": "Display employees by role with salary average over 50K.",
      "options": [
        "SELECT role, AVG(salary) FROM emp GROUP BY role HAVING AVG(salary) > 50000;",
        "SELECT role WHERE AVG(salary) > 50000;",
        "HAVING AVG(salary) > 50000 GROUP BY role;",
        "SELECT salary AVG(role) > 50000 FROM emp;"
      ],
      "answer": "SELECT role, AVG(salary) FROM emp GROUP BY role HAVING AVG(salary) > 50000;",
      "number": 17
    },
    {
      "question": "Which is valid to filter by min value > 200?",
      "options": [
        "HAVING MIN(value) > 200",
        "WHERE MIN(value) > 200",
        "GROUP MIN(value) > 200",
        "FILTER MIN(value) > 200"
      ],
      "answer": "HAVING MIN(value) > 200",
      "number": 18
    },
    {
      "question": "Get cities with count of users < 100.",
      "options": [
        "SELECT city, COUNT(*) FROM users GROUP BY city HAVING COUNT(*) < 100;",
        "SELECT COUNT(*) HAVING < 100 FROM users;",
        "HAVING COUNT(*) < 100 GROUP BY city;",
        "SELECT city FROM users COUNT(*) < 100;"
      ],
      "answer": "SELECT city, COUNT(*) FROM users GROUP BY city HAVING COUNT(*) < 100;",
      "number": 19
    },
    {
      "question": "Return brands with more than 20 products.",
      "options": [
        "SELECT brand, COUNT(*) FROM products GROUP BY brand HAVING COUNT(*) > 20;",
        "SELECT brand FROM products WHERE COUNT(*) > 20;",
        "GROUP BY brand HAVING > 20;",
        "HAVING COUNT(*) > 20 FROM products;"
      ],
      "answer": "SELECT brand, COUNT(*) FROM products GROUP BY brand HAVING COUNT(*) > 20;",
      "number": 20
    }
  ]
}